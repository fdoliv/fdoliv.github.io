<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[Basic Examples with SELECT in MySQL]]></title>
      <url>/tutorial/sql/mysql/2025/03/09/basic-examples-mysql/</url>
      <content type="text"><![CDATA[The SELECT command is used to retrieve data stored in tables in MySQL. Itallows for various operations, from simple calculations to more elaborate queriesin databases.In the first examples, we will only work with MySQL’s internal operations, without involvingtables. Later, we will explore commands applied to tables, which require adaptingthe names according to the context of the database being used.Simple Arithmetic OperationsThese operations use MySQL as a calculator, allowing for sums, multiplications, andother basic mathematical functions.-- Addition operationSELECT 2+2;SELECT 2+2, 3+3;-- Subtraction operationSELECT 2-1;-- Multiplication operationSELECT 2*2, 9*(2+3);-- Division operationSELECT 10/2;SELECT FORMAT(4/7,12);SELECT 4*PI()/3;-- Exponentiation operationSELECT FORMAT(POWER(2,64),0);-- Square root operationSELECT SQRT(2);The query SELECT FORMAT(3/7,12) divides 3 by 7 and uses the FORMAT function to display the result with 12 decimal places.In the query SELECT FORMAT(POWER(2,64),0), the POWER function calculates 2 raised to the power of 64.Here, FORMAT is used to display the number without any decimal part, making the result more organized.Logical and Boolean OperatorsLogical operators, such as AND (conjunction), OR (disjunction), and NOT (negation), are used to combine or modify conditions.They work with boolean values, where 1 represents true and 0 represents false.For example, AND returns true only if all conditions are true, while OR returns true if at least one condition is true.The NOT operator inverts the logical value, turning true into false and vice versa.-- Conjunction operationSELECT 1 AND 1; -- Both are true, returns 1SELECT 1 AND 0; -- One of the values is false, returns 0SELECT FALSE &amp;&amp; TRUE; -- `FALSE` is equivalent to 0 and `TRUE` to 1, so it returns 0-- Disjunction operationSELECT FALSE OR TRUE; -- Since there is a true value, it returns 1SELECT FALSE || TRUE; -- Alternative with `||`, also returns 1-- Negation operationSELECT NOT 1; -- Since 1 is true, it returns 0 (false)SELECT NOT 0; -- Since 0 is false, it returns 1 (true)MySQL follows the logical precedence where AND is evaluated before OR, unless parentheses explicitly state another order.Bitwise OperationsBitwise operations allow for the direct manipulation of the bits of integer numerical values.Unlike logical operators (AND, OR), which work with boolean values (0 or 1), bitwise operators act on each individual bit in the binary numbers.Bitwise AND OperationThe bitwise AND is a binary operation that uses two binary representations of the same length and performs the logical AND operation on each pair of corresponding bits.Thus, if both bits in the compared position are 1, the bit in the resulting binary representation will be 1 (1 × 1 = 1); otherwise, the result will be 0 (1 × 0 = 0 and 0 × 0 = 0).      0 1 0 1  (decimal 5)  AND 0 0 1 1  (decimal 3)  -------------      0 0 0 1  (decimal 1)MySQL allows us to perform this type of operation by abstracting the process of converting from decimal to binary.Below is the previous example done in MySQL:  SELECT 5 &amp; 3, 3 &amp; 5; -- Both return 1Bitwise OR OperationThe bitwise OR is a binary operation that uses two bit patterns of the same length and performs the inclusive OR logical operation on each pair of corresponding bits.The result in each position will be 0 if both bits are 0; otherwise, the result will be 1.      0 1 0 1  (decimal 5)  OR  0 0 1 1  (decimal 3)  -------------      0 1 1 1  (decimal 7)Below is how this operation occurs in MySQL:  SELECT 5 | 3, 3 | 5; -- Both return 7Selecting Date and TimeMySQL offers several functions to return information about the system’s date and time.These functions are useful for capturing the current time, the current date, or even timestamps.Below are some examples:-- Returns the current timeSELECT CURRENT_TIME();-- Returns the current dateSELECT CURRENT_DATE();-- Returns the current date and timeSELECT NOW();-- Returns the Unix timestamp (number of seconds since January 1, 1970)SELECT UNIX_TIMESTAMP();In addition to the basic functions for getting date and time, MySQL offers several functions to manipulate and extract specific information from dates.These functions are useful for more detailed temporal analysis.Below are some examples:-- Returns the week of the year for the current dateSELECT WEEK(CURRENT_DATE());-- Returns the day of the week (0 = Monday, 6 = Sunday)SELECT WEEKDAY(CURRENT_DATE());-- Returns the quarter of the year for the current dateSELECT QUARTER(CURRENT_DATE());-- Returns the number of the day in the year for the current dateSELECT DAYOFYEAR(CURRENT_DATE());-- Returns the name of the month for the current dateSELECT MONTHNAME(CURRENT_DATE());-- Returns the difference in days between two datesSELECT DATEDIFF('2025-12-31', CURRENT_DATE());Mathematical FunctionsMySQL has several built-in mathematical functions that can be used to perform calculations directly in the database.These functions are useful for operations like rounding, calculating powers, trigonometry, among others.Below are several examples:-- Returns the absolute value of a numberSELECT ABS(-15);-- Rounds a number to the nearest integerSELECT ROUND(3.75);-- Rounds a number with specified decimal precisionSELECT ROUND(3.14159, 2); -- Result: 3.14-- Returns the largest integer value less than or equal to the number (rounding down)SELECT FLOOR(4.9);-- Returns the smallest integer value greater than or equal to the number (rounding up)SELECT CEIL(4.1);-- Calculates the square root of a numberSELECT SQRT(16);-- Returns the value of a number raised to the specified powerSELECT POW(2, 3); -- Equivalent to 2^3-- Calculates the sine of an angle (in radians)SELECT SIN(PI()/2);-- Calculates the cosine of an angle (in radians)SELECT COS(PI());-- Calculates the tangent of an angle (in radians)SELECT TAN(PI()/4);-- Returns the natural logarithm of a numberSELECT LOG(10);-- Returns the base-10 logarithm of a numberSELECT LOG10(100);-- Returns the value of PiSELECT PI();-- Returns the greatest value from a list of numbersSELECT GREATEST(10, 20, 30, 5);-- Returns the least value from a list of numbersSELECT LEAST(10, 20, 30, 5);-- Returns the remainder of the division of two numbersSELECT MOD(10, 3); -- Result: 1-- Converts degrees to radiansSELECT RADIANS(180); -- Result: PI-- Converts radians to degreesSELECT DEGREES(PI()); -- Result: 180-- Generates a random number between 0 and 1SELECT RAND();-- Generates a random number multiplied by an intervalSELECT RAND() * 100; -- Number between 0 and 100Working with User VariablesIn MySQL, it is possible to use user variables to store temporary values during the execution of queries. These variables are useful for manipulating data, performing intermediate calculations, or sharing values between different SQL commands within the same session.User variables are identified by the @ prefix and can be assigned and accessed directly. Below are some examples of use:-- Defines a variable and assigns the value 1SELECT @x := 1;-- Returns the value of the previously defined variableSELECT @x;-- Assigns the value of the constant PI() to the variableSELECT @x := PI();-- Assigns the value of PI() and displays the result with an aliasSELECT @x := PI() AS pi;-- Uses a variable in a calculationSELECT @x := 10, @y := 20, @sum := @x + @y;-- Defines a variable and uses it in a conditionSELECT @limit := 100;SELECT * FROM products WHERE price &lt; @limit;-- Reuses the value of a variable in multiple queriesSELECT @counter := 0;SELECT @counter := @counter + 1 AS increment;Operations using tablesNow, we will start working with tables. Remember to replace the table and column nameswith the corresponding ones from your database.Below, we explain the main uses of the SELECT command with practical examples:Querying all records from a tableTo retrieve all records from a table, use the * character:SELECT * FROM table_name;Querying specific columnsIf you want to return only some columns from the table, specify the column names:SELECT column1, column2 FROM table_name;For example, if we want to get the id and name from the customers table:SELECT id, name FROM customers;Filtering records with WHEREThe WHERE clause is used to filter records based on specific conditions:SELECT * FROM table_name WHERE column1 = 'value';For example, if we want to select the record in the customers table with id = 1:SELECT * FROM customers WHERE id = '1';Using comparison operatorsComparison operators in MySQL are powerful tools that allow for more detailed and precise queries.They are used to compare values in a table, returning only the records that meet the specified conditions.Below are the main operators:  Equality (=): Returns records where the values of a field are exactly equal to a certain value.    -- Returns all records that meet the condition column1 equal to 10SELECT * FROM table_name WHERE column1 = 10;        Not equal (!= or &lt;&gt;): Returns records where the values are different from a specified value.    -- Returns all records that meet the condition column1 not equal to 10SELECT * FROM table_name WHERE column1 != 10;        Greater than (&gt;): Returns records where the values are greater than a specified value.    -- Returns all records that meet the condition column1 greater than 10SELECT * FROM table_name WHERE column1 &gt; 10;        Less than (&lt;): Returns records where the values are less than a specified value.    -- Returns all records that meet the condition column1 less than 50SELECT * FROM table_name WHERE column1 &lt; 50;        Greater than or equal to (&gt;=): Returns records where the values are greater than or equal to a specified value.    -- Returns all records that meet the condition column1 greater than or equal to 20SELECT * FROM table_name WHERE column1 &gt;= 20;        Less than or equal to (&lt;=): Returns records where the values are less than or equal to a specified value.    -- Returns all records that meet the condition column1 less than or equal to 30SELECT * FROM table_name WHERE column1 &lt;= 30;      These operators make queries more flexible and allow for the extraction of specific information, which is very useful when working with large volumes of data.Sorting queries with ORDER BYThe ORDER BY clause is used to sort the results of a query based on one or more columns.It allows organizing data in ascending order (default, using ASC) or descending order (using DESC).This is especially useful for viewing records in a structured and hierarchical way.-- Sorts the records based on column1 in ascending orderSELECT * FROM table_name ORDER BY column1 ASC;-- Sorts the records based on column1 in descending orderSELECT * FROM table_name ORDER BY column1 DESC;Limiting the number of recordsThe LIMIT clause is used to restrict the number of records returned by a query.It is especially useful when you want to view only a portion of the data, such as the first few results of a table or the most relevant records.For example, to limit the number of results to 10 records, use LIMIT 10:    SELECT * FROM table_name LIMIT 10;You can also combine LIMIT with OFFSET to specify from which record the query should start:SELECT * FROM table_name LIMIT 10 OFFSET 5;This functionality is widely used in results pagination and optimized queries.Querying unique records with DISTINCTThe DISTINCT keyword is used to eliminate duplicate values in the results of a query.It ensures that only unique records are returned, considering the values of the specified columns.This is useful when you need to identify distinct values in a table, such as categories, names, or other attributes.SELECT DISTINCT column1 FROM table_name;Using LIKE to search for a patternThe LIKE operator in MySQL is used to perform pattern searches in text columns.It is especially useful when you need to find records that contain, start with, or end with certain characters.To define the patterns, the wildcards % and _ are used:For example, to search for all records containing strings that start with “A”:SELECT * FROM table_name WHERE column1 LIKE 'A%';Now if we want to search for all records containing strings in column1 that end with “B”:SELECT * FROM table_name WHERE column1 LIKE '%B';All records containing strings in column1 that have “C”:SELECT * FROM table_name WHERE column1 LIKE '%C%';The % wildcard character represents any sequence of characters (including none).Another example, let’s say we need records that start with “A” and contain exactly 2 characters in sequence.For this, you will need to use the _ wildcard, which represents exactly 1 character:SELECT * FROM table_name WHERE column1 LIKE 'A__';In the statement above, values like ANA, ABC, and A23 would meet the condition. But values like ABCD and ANAS would not, as they have more than 2 characters after the “A”.Counting Records with COUNTThe COUNT function returns the total number of records in the table or in a filtered subset:-- Returns the number of records in the tableSELECT COUNT(*) FROM table_name;-- Returns the number of records that meet the conditionSELECT COUNT(*) FROM table_name WHERE column1 = 'value';Performing Calculations with Aggregate FunctionsIn addition to COUNT, other aggregate functions can be used for calculations:  Sum of the values of a column:    SELECT SUM(column1) FROM table_name;        Average of the values of a column:    SELECT AVG(column1) FROM table_name;        Maximum value of a column:    SELECT MAX(column1) FROM table_name;        Minimum value of a column:    SELECT MIN(column1) FROM table_name;      Grouping Results with GROUP BYThe GROUP BY clause is used to group records based on one or more columns:SELECT column1, COUNT(*) FROM table_name GROUP BY column1;Filtering Groups with HAVINGThe HAVING clause is used to filter the results after grouping:SELECT column1, COUNT(*) FROM table_name GROUP BY column1 HAVING COUNT(*) &gt; 5This material was created based on the sources listed below:  MySQL 8.4 Reference Manual: https://dev.mysql.com/doc/refman/8.4/en/non-typed-operators.html  Bitwise operation: https://en.wikipedia.org/wiki/Bitwise_operation]]></content>
      <categories>
        
          <category> tutorial </category>
        
          <category> sql </category>
        
          <category> mysql </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Dependability Evaluation of a Smart Poultry House: Addressing Availability Issues Through the Edge, Fog, and Cloud Computing]]></title>
      <url>/papers/dependability/smart%20poultry%20house/availability/edge%20computing/fog%20computing/cloud%20computing/2024/03/29/dependability-smart-house/</url>
      <content type="text"><![CDATA[Abstract: Internet of Things (IoT) applications equip rural producers with decision support tools and automated solutions that boost agribusiness productivity, quality, and profit. However, most poultry farmers still use conventional methods of operation in which human workers carry out all routines for monitoring and controlling their farms at the expense of greater productivity. One of these human activities is manual weighing, which can be replaced by nonintrusive methods such as computational vision applications that estimate live poultry’s weight using video cameras. Since Internet of Things (IoT) devices may have low computing power limiting the ability to process the data locally, they can transfer it to a fog or cloud data center, where they are processed. This article aims to conduct a dependability study of a poultry house automated with a computer vision-based system for estimating poultry weight considering hierarchical models (e.g., Markov chain, reliability block diagram, and closed-form equation) to represent the whole system and obtain steady-state availability and annual downtime. In addition, our purpose is to consider and compare different architectural solutions, such as edge and fog computing-based solutions. The proposed solution verified that a cloud-based application with no redundancy has a downtime of 34.14% and 9.176% hours when considering a hot-standby redundancy strategy in the office node of a cloud solution.Details in this link.]]></content>
      <categories>
        
          <category> Papers </category>
        
          <category> Dependability </category>
        
          <category> Smart Poultry House </category>
        
          <category> Availability </category>
        
          <category> Edge computing </category>
        
          <category> Fog computing </category>
        
          <category> Cloud computing </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A survey on reliability and availability modeling of edge, fog, and cloud computing]]></title>
      <url>/papers/reliability/dependability/edge%20computing/fog%20computing/cloud%20computing/2024/03/29/dependability-survey-fog-cloud-edge/</url>
      <content type="text"><![CDATA[Abstract: During the past years, sending data to the cloud servers was a prominent trend, making the cloud computing paradigm dominate the technology landscape. However, the internet of things (IoT) is becoming a part of our daily environments, and it generates a large volume of data, which is creating uncontrollable delays. For the delay-sensitive and context-aware services, these uncontrollable delays may cause low reliability and availability for applications. To overcome these challenges, computing paradigms are moving from centralized cloud environments to the Edge of the networks. Several new computing paradigms, such as Edge and Fog computing, emerged to support delay-sensitive and context-aware services. By combining edge devices, fog servers, and cloud computing, companies can build a hierarchical IoT infrastructure, using Edge–Fog–Cloud orchestrated architecture to improve IoT environments’ performance, reliability, and availability. This paper presents a comprehensive survey on reliability and availability of Edge, Fog, and Cloud computing architectures. We first introduce and compare some related works about these paradigms and compare them to define the differences between Edge and Fog environments, since there is still some confusion about these terms. We also describe their taxonomy and how they link to each other. Finally, we draw some potential research directions that may help foster research efforts in this area.Details in this link.]]></content>
      <categories>
        
          <category> Papers </category>
        
          <category> Reliability </category>
        
          <category> Dependability </category>
        
          <category> Edge computing </category>
        
          <category> Fog computing </category>
        
          <category> Cloud computing </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Dependability Issues on an Internet Service Provider and availability study of autonomous systems]]></title>
      <url>/papers/dependability/internet%20service%20provider/ctmc/rbd/2024/03/29/dependability-isp/</url>
      <content type="text"><![CDATA[Abstract: The Internet is arguably the most important means of communication, as there is no business strategy without the Internet. The Internet Service Provider’s challenge is to ensure the high availability of services to meet customers’ expectations, guaranteeing that they will be available and ready for whatever may be the user’s interests may be. Every time the user tries to access the service or product, and it is unavailable, we have the characterization of the service as unavailability. In this article, we evaluate the ISP’s core availability, identify availability issues in the router component, and study CTMC and RBD models by performing a model validation experiment, executing a steady-state availability, and performing a sensitivity analysis. Hierarchical modeling strategies, (availability models combining reliability block diagrams (RBD) and continuous time Markov chain (CTMC)) were used, indicating the availability of the infrastructure. The critical component of the system was indicated through sensitivity analysis. We performed a model validation technique to demonstrate that the models represent the behavior of the real system. The results showed that the system availability is 0.99941, and the sensitive analysis indicated that if the system administrator optimized the ISP infrastructure in 50%, it would yield a yearly downtime reduction of 3.4 hours.Details in this link.]]></content>
      <categories>
        
          <category> Papers </category>
        
          <category> Dependability </category>
        
          <category> Internet Service Provider </category>
        
          <category> CTMC </category>
        
          <category> RBD </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Performance and availability evaluation of the blockchain platform hyperledger fabric]]></title>
      <url>/papers/dependability/blockchain/2024/03/29/performance-availability-blockchain/</url>
      <content type="text"><![CDATA[Abstract: Through the blockchain-as-a-service paradigm, one can provide the infrastructure required to host blockchain-based applications regarding performance and dependability-related attributes. Many works evaluated issues and mitigated them to reach a high throughput or better downtime and availability indexes. However, to the best of our acknowledgment, studies regarding both characteristics are yet to be performed. This paper presents a performance evaluation of a private infrastructure hosting a blockchain-based application. As we monitored the system, we noticed some increase in resource consumption that may be associated with software aging issues on the hyperledger fabric platform or its basic components. Also, the impact of this resource increment on the probability of the system being operational has been evaluated. When consumption issues were considered, one of the transaction types increased the RAM consumption by almost 80% in less than 3 h, reducing the system availability to 98.17%. For scenarios without resource increment issues on the infrastructure, the availability reached 99.35%, with an annual downtime of 56.43 h.Details in this link.]]></content>
      <categories>
        
          <category> Papers </category>
        
          <category> Dependability </category>
        
          <category> blockchain </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[The Mercury Environment: A Modeling Tool for Performance and Dependability Evaluation]]></title>
      <url>/papers/dependability/mercury/2021/07/07/mercury/</url>
      <content type="text"><![CDATA[Abstract: It is important to be able to judge the performance or dependability metrics of a system and often we do so by using abstract models even when the system is in the conceptual phase. Evaluating a system by performing measurements can have a high temporal and/or financial cost, which may not be feasible. Mathematical models can provide estimates about system behavior and we need tools supporting different types of formalisms in order to compute desired metrics. The Mercury tool enables a range of models to be created and evaluated for supporting performance and dependability evaluations, such as reliability block diagrams (RBDs), dynamic RBDs (DRBDs), fault trees (FTs), stochastic Petri nets (SPNs), continuous and discrete-time Markov chains (CTMCs and DTMCs), as well as energy flow models (EFMs). In this paper, we introduce recent enhancements to Mercury, namely new SPN simulators, support to prioritized timed transitions, sensitivity analysis evaluation, several improvements to the usability of the tool, and support to DTMC and FT formalisms.Details in this link.]]></content>
      <categories>
        
          <category> Papers </category>
        
          <category> Dependability </category>
        
          <category> Mercury </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Software Aging in Container-based Virtualization: An Experimental Analysis on Docker Platform]]></title>
      <url>/papers/aging/virtualization/docker/2021/06/26/swad-cisti2021/</url>
      <content type="text"><![CDATA[Abstract: Lightweight virtualization, and specifically containers, has become widespread in the information technology industry to provide an efficient operational environment for the execution of scalable services on the Internet. Containers rely on a set of technologies different from the features that enable hardware virtualization (i.e., hypervisor-based virtual machines). However, both types of virtualized environments are employed to host applications that will be accessible anytime, anywhere. Thus, they are prone to software aging, which usually affects systems that run for long time intervals. Researchers have identified software aging effects in distinct types of cloud computing environments and hypervisors over recent years. However, a few works have dealt with this phenomenon in container-based platforms. This paper presents an experimental analysis of the software aging effects observed on Docker platforms while also evaluating the fitness of a time-series model to predict resource consumption’s progress caused by software aging. We employ a stress test workload tailored for the scenario of containers arranged in a cluster managed by Docker Swarm. The obtained results indicate an increasing usage of resident memory, virtual memory, and CPU usage, as the system undergoes subsequent scale-up and scale-down operations. The quadratic trend model was the best fitting approach for predicting resident and virtual memory usage, with less than 5% of prediction error. The experimental approach presented here may help systems administrators to detect evidence of software aging in container-based environments, and allowing then to choose a proper method and time for deploying rejuvenation actions to mitigate the dependability issues raised in similar scenarios described here.Details in this link.]]></content>
      <categories>
        
          <category> Papers </category>
        
          <category> Aging </category>
        
          <category> Virtualization </category>
        
          <category> Docker </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[A Software Maintenance Methodology: An Approach Applied to Software Aging]]></title>
      <url>/papers/aging/methodology/2021/05/15/swa-syscon21/</url>
      <content type="text"><![CDATA[Abstract: The increasing use of computational systems has highlighted concerns about attributes that may influence the quality of service, such as performance, availability, reliability, and maintenance capacity. Failures in the software development process may impact these attributes. Flawed code and overall software misdesign may cause internal errors, leading to system malfunction. Some errors might be identified and fixed during the software testing process. However, other errors may manifest only during the production stage. This is the case of the software aging phenomenon, which is related to the progressive degradation that a software performance or reliability suffers during its operational life. This paper proposes a methodology for software maintenance that is tailored to identify, correct, and mitigate the software aging effects. If the source code can be modified and a new version deployed with minimal impact, thus data from aging detection is used for corrective maintenance, i.e., for fixing the bug the causes the aging effects. If the software cannot be fixed nor its version updated without long system interruption or other bad consequences, then our approach can mitigate the aging effects, in a preventive maintenance to avoid service outages. The proposed methodology is validated through both Stochastic Petri Net (SPN) models and experiments in a controlled environment. The model evaluation considering a hybrid maintenance routine (preventive and corrective) yielded an availability of 99.82%, representing an annual downtime of 15.9 hours. By contrast, the baseline scenario containing only reactive maintenance (i.e., repairing only after failure) had more than 1342 hours of annual downtime - 80 times higher than the proposed approach.Details in this link.]]></content>
      <categories>
        
          <category> Papers </category>
        
          <category> Aging </category>
        
          <category> Methodology </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Experimental Evaluation of Software Aging Effects in a Container-Based Virtualization Platform]]></title>
      <url>/papers/aging/container/2020/10/14/experimental-smc/</url>
      <content type="text"><![CDATA[Abstract: Cloud-based architectures have grown in recent years, especially the interest in container-based solutions have sharply increased by enterprises worldwide. Containers are a form of lightweight virtualization that can be used to provide cloud services. Adopting this kind of technology in a bare- metal context is becoming strong because they can offer many benefits, like performance efficiency and costs reduction. Docker is a widespread platform for the creation and management of containers. As in any computational cloud service, Docker environments must deal with the intensive workload and may have a long-term life cycle, which might trigger some problems that compromise the system dependability. The software aging phenomenon is one of these likely problems. It is a process of cumulative errors or system misbehavior that leads to application failures and performance degradation throughout its runtime. This paper aims to monitor and evaluate software aging effects on the Docker platform in a cloud computing environment. We conducted two experimental studies with automated workloads to simulate containers’ life cycle and the intensive use of Docker features, while the system was monitored. The results show high resource consumption by the operating system’s network utility, in addition to memory fragmentation in the sub-processes of the Docker platform. Trends of increasing resident memory consumption were also observed in one of these scenarios.Details in this link.]]></content>
      <categories>
        
          <category> Papers </category>
        
          <category> Aging </category>
        
          <category> container </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[How to download youtube live streams?]]></title>
      <url>/tutorial/youtube/2020/09/04/download-video-live/</url>
      <content type="text"><![CDATA[Today I needed to download live stream videos from youtube (i.e., that are still live). To do this, I used the command-line utility Streamlink, which extracts streams from various services and pipes them into a video player of choice or a file.Install StreamlinkTo install Streamlink on Debian like systems, we need to execute on terminal:sudo apt install streamlinkStreamlink usageNow, to use the tool we need to run:streamlink --hls-live-restart -o &lt;output file name&gt; &lt;URL&gt; bestHere the --hls-live-restart parameter is to skip to the beginning of a live stream, or as far back as possible. The -o parameter is to set the output file, were is indicate in &lt;output file name&gt;. Replacing the &lt;URL&gt; with the video URL (e.g. from youtube),we indicate the source site of the video. Finally, the parameter best is to indicate the stream quality, it also can be 144p (worst), 240p, 360p, 480p, 720p (best).For example, we can download the NASA TV video stream from youtube. To do this is enouth run in terminal:streamlink --hls-live-restart -o nasa.mp4 https://youtu.be/21X5lGlDOfg best]]></content>
      <categories>
        
          <category> Tutorial </category>
        
          <category> Youtube </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Impactos da IoT na Avicultura: um Mapeamento Sistemático]]></title>
      <url>/iot/poultry/automation/papers/2019/11/14/iot-avicultura/</url>
      <content type="text"><![CDATA[Abstract: Brazil is today the largest exporter and the second largest producer worldwide of chicken meat. Despite such prominent position, the lack of data about the use of tools based on Internet of Things (IoT) at national poultry farming leads to the hypothesis that the most Brazilian poultry farmers still use conventional methods to the detriment of higher productivity. In this work, we mapped 17 publications from the international literature that show IoT-based solutions that pass through food safety, environmental production factors, traceability, and animal health. This way, we expect to contribute to a discussion between the computer and agribusiness scientific communities through a systematic review.Resumo: O Brasil é hoje o maior exportador e o segundo maior produtor mundial de carne de frango. Apesar dessa posição de destaque, a ausência de dados sobre a utilização de ferramentas baseadas em ​Internet of Things (IoT) na indústria de avicultura nacional reforça a hipótese de que a maior parte dos avicultores brasileiros ainda usam métodos convencionais de operação em detrimento de uma maior produtividade. Nesse estudo, foram mapeados 17 trabalhos da literatura internacional que apresentam soluções baseadas em IoT que perpassam desde a segurança alimentar, fatores ambientais de produção, rastreabilidade e saúde dos animais. Espera-se, portanto, contribuir para discussão entre a comunidade científica da computação e do agronegócio por meio de uma revisão sistemática.Details in this link.]]></content>
      <categories>
        
          <category> IoT </category>
        
          <category> Poultry </category>
        
          <category> Automation </category>
        
          <category> Papers </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Introdução ao GNU/Linux - Comandos e Scripts]]></title>
      <url>/linux/infrastructure/ti/opensource/course/2019/10/26/course-linux/</url>
      <content type="text"><![CDATA[On October 25, 2019:  I taught the Introduction to GNU / LINUX  - Commands and Scripts short course, offered by “Laboratório Multidisciplinar de Tecnologias Sociais (LMTS)” to students of computer science in Garanhuns-PE.Details in this link.]]></content>
      <categories>
        
          <category> Linux </category>
        
          <category> Infrastructure </category>
        
          <category> TI </category>
        
          <category> OpenSource </category>
        
          <category> Course </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Referências sobre REST APIs]]></title>
      <url>/api/rest/2019/05/20/referencias-sobre-apis/</url>
      <content type="text"><![CDATA[  Best Practices for Designing a Pragmatic RESTful API (►) - Lista bem completa sobre boas práticas para a construção de APIs RESTful.  Webinar Design de APIs RESTful (►) - Webinar sobre projeto de APIs.  APIs do Jeito Certo (►) - Apresentação sobre boas práticas no desenvolvimento de APIs que aborda assuntos como documentação, autenticação e segurança.  Existe Vida Além do REST? (►) - Apresentação sobre APIs REST com discussão sobre a vantagem/desvantagem de se utilizar as diferentes abordagens na criação de APIs.]]></content>
      <categories>
        
          <category> API </category>
        
          <category> REST </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Como instalar o systemtap no debian]]></title>
      <url>/systemtap/instrumentation/infraestructure/ti/2019/03/07/systemtap-instalation/</url>
      <content type="text"><![CDATA[Os passos desta instalação do systemtap foram realizados no Debian 9, mas segundo a documentação oficial:  Systemtap works with official Debian kernel packages since the Squeeze release (with the exception of user space probes that are not supported yet, see Debian bug #691167). To use systemtap you need to manually install the linux-image--dbg and linux-header- packages that match your running kernel. To simplify this task you can use the stap-prep command. Please always run this before reporting a bug.Passos da instalaçãoInstalar o systemtap via apt install:apt install systemtapapt install linux-headers-$(uname -r) &amp;&amp; linux-image-$(uname -r)-dbgVerificando a instalação e executando um Hello, World!:stap -e 'probe begin { printf("Hello, World!\n"); exit() }'Se um usuário não administrador (não root) for utilizar o systemtap, é necessário o adicionar nos grupos stapusr, stapdev, stapsys:usermod -a -G grupo usuarioApós a reinicialização, será possível utilizar com o usuário.]]></content>
      <categories>
        
          <category> Systemtap </category>
        
          <category> Instrumentation </category>
        
          <category> Infraestructure </category>
        
          <category> TI </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[How to export a VM Virtualbox to a Xen virtual machine]]></title>
      <url>/virtualbox/xen/infraestructure/ti/2019/03/06/convert-vbox-xen/</url>
      <content type="text"><![CDATA[Step 1: can convert your VDI disk image to a RAW disk  VBoxManage clonehd centos6.vdi centos6.img -format RAWStep 2: Refer to the centos6.vbox file, and create the configuration file for Xen VM.  You can do this manually or create a shell script that would extract the necessary fields and parse them into Xen configuration file.  cat /etc/xen/centos6  name = "centos6"  uuid = "f220932f-8750-4f5b-b220-8050210e9835"  memory = 1024  vcpus = 1  bootloader = "/usr/bin/pygrub"  on_poweroff = "destroy"  on_reboot = "restart"  on_crash = "restart"  disk = [ "file:/var/lib/xen/images/centos6.img,xvda,w" ]  vif = [ "mac=00:16:3e:46:e6:fb,bridge=xenbr0" ]  extra="console=hvc0"]]></content>
      <categories>
        
          <category> VirtualBox </category>
        
          <category> Xen </category>
        
          <category> Infraestructure </category>
        
          <category> TI </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Software Aging Issues in Streaming Video Player]]></title>
      <url>/client-side/dependability/qos/papers/aging/2016/04/05/software-aging-video/</url>
      <content type="text"><![CDATA[Abstract: Many researchers around the world are working hard to improve cloud-based services focusing on server-side and communication aspects. This is especially true for services which demand high processing power and storage space on their server’s infrastructure, such as live video streaming on the web and video on demand. However, issues on client-side applications are often neglected or studied to a lower extent. In this context, this paper evaluates the occurrence of software aging in a web browser plug-in for video streaming. The case study is carried out by using an automated workload that simulates the user behavior accessing videos on YouTube. Time series were used to predict the resources utilization ahead of time, enabling the prevention of performance degradation and unexpected crashes. Finally, the prediction-based strategy is compared to the time-based strategy, showing the impact of both on system’s availability.Details in this link.]]></content>
      <categories>
        
          <category> client-side </category>
        
          <category> dependability </category>
        
          <category> QoS </category>
        
          <category> Papers </category>
        
          <category> Aging </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Performance Evaluation of Hypervisors for HPC Applications]]></title>
      <url>/hpc/kvm/virtualbox/virtualization/papers/2015/10/01/hpc-smc/</url>
      <content type="text"><![CDATA[Abstract: High Performance Computing (HPC) aggregates computing power in order to solve large and complex problems in different knowledge areas. Nowadays, HPC users can utilize virtualized infrastructures as a low-cost alternative to deploy their applications. However, virtualization brings some challenges for HPC, specially in regard to overhead caused by hypervisors. In this work, our main goal is to analyze the performance of two hypervisors (KVM and VirtualBox) under HPC activities, considering full virtualization, and paravirtualization approaches. We used the HPC Challenge Benchmark (HPCC) to evaluate processor, RAM, inter-process communication and network communication performance. Our results show KVM in paravirtualization mode has a similar performance of a native cluster.Details in this link.]]></content>
      <categories>
        
          <category> HPC </category>
        
          <category> KVM </category>
        
          <category> VirtualBox </category>
        
          <category> Virtualization </category>
        
          <category> Papers </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[PocketStack: Uma Plataforma de Alta Disponibilidade para Nuvens Privadas]]></title>
      <url>/infrastructure/ti/opensource/cloud%20computing/2015/04/08/pocketstack/</url>
      <content type="text"><![CDATA[On April 08, 2015:  I participated in the WMoDCS 2015.1 with the presentation PocketStack: Uma Plataforma de Alta Disponibilidade para Nuvens Privadas, at Recife-PE, Brazil.]]></content>
      <categories>
        
          <category> Infrastructure </category>
        
          <category> TI </category>
        
          <category> OpenSource </category>
        
          <category> Cloud computing </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[Utilização de hardware legado para o ensino de CAD]]></title>
      <url>/cad/virtualbox/infrastructure/ti/papers/2014/12/01/ensino-cad/</url>
      <content type="text"><![CDATA[Resumo: Computação de Alto Desempenho (CAD) é um tema atual e que demanda por uma infraestrutura adequada para seu ensino em cursos de graduação. Entretanto, nem todas as instituições de ensino têm recursos financeiros para proporcionar estruturas computacionais dedicadas exclusivamente ao ensino de tópicos de CAD. Neste trabalho, é apresentada uma infraestrutura para o auxílio no ensino de CAD construída com a utilização de computadores destinados ao descarte. O uso de tais computadores destinados originalmente ao descarte colaborou também na transmissão de princípios de TI Verde.Details in this link.]]></content>
      <categories>
        
          <category> CAD </category>
        
          <category> VirtualBox </category>
        
          <category> Infrastructure </category>
        
          <category> TI </category>
        
          <category> Papers </category>
        
      </categories>
      <tags>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
